name: CI

on:
  push:
  pull_request:

env:
  DENO_DIR: /tmp/.deno

jobs:
  # WebAssembly + Deno workflow
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno-version: ['v2.x']  # Use only Deno v2 for simplicity

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy

      - name: Install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Setup Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Build WebAssembly
        run: |
          wasm-pack build --target deno --out-dir pkg-deno

      - name: Verify installations
        run: |
          deno --version
          cargo --version
          wasm-pack --version

      - name: Run Rust tests
        run: |
          echo "Running Rust unit tests..."
          cargo test --lib

      - name: Run Rust integration tests
        run: |
          echo "Running Rust integration tests..."
          cargo test --test lib_integration_test

      - name: Check Rust formatting
        run: |
          echo "Checking Rust formatting..."
          cargo fmt --check

      - name: Run Rust linter
        run: |
          echo "Running Rust linter..."
          cargo clippy -- -D warnings

      - name: Check Deno formatting
        run: |
          echo "Checking Deno formatting..."
          deno fmt --check

      - name: Run Deno linter
        run: |
          echo "Running Deno linter..."
          deno lint

      - name: Type check TypeScript files
        run: |
          echo "Type checking TypeScript files..."
          deno check tests/deno/greet_test.ts main.ts

      - name: Run WebAssembly tests
        run: |
          echo "Running WebAssembly tests with Deno..."
          deno test --allow-all tests/deno/

      - name: Run tool tests
        run: |
          echo "Running puyop-parser tests..."
          deno run --allow-net tools/puyop-parser.test.js
